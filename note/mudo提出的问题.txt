1. recv, 阻塞还是非阻塞，如何处理分包，应用层的缓冲如何设计
2. 主动关闭链接，缓冲区还有数据没发送怎么处理？如何保证发送完数据再关闭
3. 主动发起链接但是对方拒绝，如何定期重试？
4. 非阻塞，采用电平出发还是边沿触发?
4.1 电平触发，什么时候关注 POLLOUT 事件?会不会造成 busy loop?
4.2 边沿触发，如何防止漏读饥饿？
5. 如何设计并使用缓冲区？万一接收慢，数据会不会一直堆积再发送方，造成内存饱满，如何做应用层的流量控制？
6. 当你准备关闭数据的时候，如何得知对方是否发了一些数据而你还没有收到？
7. 如果被动关闭，缓冲区还有数据，如何保证发送出去？避免对方漏收数据
8. 如何防止串话，链接 a 断开，新建立的链接 b 复用了 a 的文件描述符，那么会不会错误的把消息发送给 b？
9. 为什么需要 buffer ? outputbuffer 和 inputBuffer 的作用分别是什么？
10. 进程的文件描述符达到上限，又该怎么处理？EMFILE, 服务端无法 close, 一直有新连接进来
    （保存一个空闲描述符， 或是 设置一个比较低的文件描述符，低于 hardware）
11. 网络字节序改怎么处理？大端和小端
12. 主机字节序和网络字节序， 0x0102  大端表示和小端表示，如何转换？
13. 带外数据又是什么？
14. 什么是编解码器，他的功能是什么？
15. 限制服务器的最大并发连接数，目的是什么？
16. 客户端断开后服务端继续写 socket, 会产生 SIGPIPE，应该如何处理？
17. TCP no delay 是指什么？禁止 Nagle 算法
18. 客户端发送数据高于服务端的接收速度，会造成数据在本地内存中堆积，该如何处理？P322
19. Tcp连接优先级怎么处理？
20. 发送大文件该怎么处理， P189